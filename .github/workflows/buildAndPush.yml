name: Build, Publish, and Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  infer-release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.semantic.outputs.new-release-version }}
      released: ${{ steps.semantic.outputs.new-release-published }}
    # version: ${{ steps.nyx.outputs.version }}

    steps:
      - name: "‚úÖ Checkout code"
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: "‚öôÔ∏è Setup Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: 'npm'

      - name: "üì¶ Install semantic-release"
        run: npm ci
      #     npm install -g semantic-release
      #     npm install -g @semantic-release/release-notes-generator
      #     npm install -g @semantic-release/commit-analyzer
      #     npm install -g @semantic-release/github
      #     npm install -g conventional-changelog-conventionalcommits
      #     npm install -g @semantic-release/changelog
      #     npm install -g @semantic-release/git

      - name: "üöÄ Run semantic-release"
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      - name: "üîç Debug semantic-release outputs"
        run: |
          echo "Version: '${{ steps.semantic.outputs.new-release-version }}'"
          echo "Released: '${{ steps.semantic.outputs.new-release-published }}'"

  build-and-publish:
    runs-on: macos-latest
    needs: infer-release

    steps:
      - name: "‚úÖ Checkout code"
        uses: actions/checkout@v5
        with:
          fetch-depth: 1

      - name: "‚öôÔ∏è Set up JDK 21"
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: "‚öôÔ∏è Setup Gradle"
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: 8.14.3

      - name: "üåé Publish with Gradle"
        run: ./gradlew publish --no-configuration-cache -Pversion=$VERSION --build-cache --daemon --parallel --scan
        env:
          VERSION: ${{ needs.infer-release.outputs.version }}
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.SIGNING_KEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_KEY }}
